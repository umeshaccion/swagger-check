{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger Petstore",
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.6"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "description":"prod",
      "url": "https://petstore.swagger.io/v2"
    },
    {
      "description":"dev",
      "url": "http://petstore.swagger.io/v2"
    },
	 {
      "description":"qa",
      "url": "http://swagger.io"
    }
  ],
  "tags": [
    {
      "name": "pets",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "stores",
      "description": "Access to Petstore orders"
    },
    {
      "name": "users",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/pet/{petId}/uploadImage": {
      "post": {
        "tags": [
          "pets"
        ],
        "summary": "uploads an image",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1234
          },
           {
            "name": "username",
            "in": "query",
            "description": "ID of pet to update",
            "required": true,
            "schema": {
              "type": "string"
              },
            "example": "shiva"
          },
          {
            "name": "cookies",
            "in": "cookie",
            "description": "ID of pet to update",
            "required": true,
            "schema": {
              "type": "string"
              },
            "example": "cookieValue"
          },
                   {
            "name": "header",
            "in": "header",
            "description": "ID of pet to update",
            "required": true,
            "schema": {
              "type": "string"
              },
            "example": "cG9zdG1hbjpwYXNzd29yZA=="
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "code": 200,
                  "type": "unknown",
                  "message": "uploaded succsfully"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet": {
      "put": {
        "tags": [
          "pets"
        ],
        "summary": "Update an existing pet",
        "operationId": "updatePet",
        "requestBody": {
          "description": "Pet object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              },
              "examples": {
                "200": {
                  "summary": "positive",
                  "value": {
                    "id": 1234,
                    "catrgory": {
                      "id": 1,
                      "name": "BullDog"
                    },
                    "name": "Bruno",
                    "photoUrls": [
                      "https://germanshepard/burno.jpg"
                    ],
                    "tags": [
                      {
                        "id": 1,
                        "name": "Tommy"
                      }
                    ],
                    "status": "available"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Bruno",
                  "photoUrls": [
                    "https://germanshepard/burno.jpg"
                  ],
                  "tags": [
                    {
                      "id": 1,
                      "name": "Tommy"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "pets"
        ],
        "summary": "Add a new pet to the store",
        "operationId": "addPet",
        "requestBody": {
          "description": "Pet object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              },
              "examples": {
                "200": {
                  "summary": "positive",
                  "value": {
                    "id": 1234,
                    "catrgory": {
                      "id": 1,
                      "name": "German shepard"
                    },
                    "name": "Bruno",
                    "photoUrls": [
                      "https://germanshepard/burno.jpg"
                    ],
                    "tags": [
                      {
                        "id": 1,
                        "name": "Tommy"
                      }
                    ],
                    "status": "available"
                  }
                },
                 "400": {
                  "summary": "negative",
                  "value": {
                    "id": 1234,
                    "catrgory": {
                      "id": 1,
                      "name": "German shepard"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Bruno",
                  "photoUrls": [
                    "https://germanshepard/burno.jpg"
                  ],
                  "tags": [
                    {
                      "id": 1,
                      "name": "Tommy"
                    }
                  ],
                  "status": "available"
                }
              },
              "application/xml": {
                "example": {
                  "id": 1,
                  "name": "Bruno",
                  "photoUrls": [
                    "https://germanshepard/burno.jpg"
                  ],
                  "tags": [
                    {
                      "id": 1,
                      "name": "Tommy"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          },
         "400": {
            "description": "s",
            "content": {}
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/pet/findByStatus": {
      "get": {
        "tags": [
          "pets"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "default": "available",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ]
              }
            },
            "example": "available"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                },
                "example": {
                  "id": 1,
                  "catrgory": {
                    "id": 1,
                    "name": "German shepard"
                  },
                  "name": "Bruno",
                  "photoUrls": [
                    "https://germanshepard/burno.jpg"
                  ],
                  "tags": [
                    {
                      "id": 1,
                      "name": "Tommy"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/findByTags": {
      "get": {
        "tags": [
          "pets"
        ],
        "summary": "Finds Pets by tags",
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "tag1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                },
                "example": {
                  "id": 1,
                  "catrgory": {
                    "id": 1,
                    "name": "German shepard"
                  },
                  "name": "Bruno",
                  "photoUrls": [
                    "https://germanshepard/burno.jpg"
                  ],
                  "tags": [
                    {
                      "id": 1,
                      "name": "Tommy"
                    }
                  ],
                  "status": "available"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/{petId}": {
      "get": {
        "tags": [
          "pets"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                },
                "example": {
                  "id": 1,
                  "catrgory": {
                    "id": 1,
                    "name": "German shepard"
                  },
                  "name": "Bruno",
                  "photoUrls": [
                    "https://germanshepard/burno.jpg"
                  ],
                  "tags": [
                    {
                      "id": 1,
                      "name": "Tommy"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "pets"
        ],
        "summary": "Updates a pet in the store with form data",
        "operationId": "updatePetWithForm",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Updated name of the pet"
                  },
                  "status": {
                    "type": "string",
                    "description": "Updated status of the pet"
                  }
                }
              },
              "example": {
                "name": "Bruno",
                "status": "sold"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "example": {
                  "code": 201,
                  "type": "unknown",
                  "message": "updated succesfully"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "pets"
        ],
        "summary": "Deletes a pet",
        "operationId": "deletePet",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "special-key"
          },
          {
            "name": "petId",
            "in": "query",
            "description": "Pet id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int6"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "example": {
                  "code": 201,
                  "type": "unknown",
                  "message": 1
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/store/order": {
      "post": {
        "tags": [
          "stores"
        ],
        "summary": "Place an order for a pet",
        "operationId": "placeOrder",
        "requestBody": {
          "description": "order placed for purchasing the pet",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              },
              "examples": {
                "200": {
                  "summary": "positive",
                  "value": {
                    "id": 1,
                    "petId": 2,
                    "quantity": 2,
                    "shipDate": "2023-05-24T07:11:03.663Z",
                    "status": "placed",
                    "complete": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "example": {
                  "id": 1,
                  "petId": 2,
                  "quantity": 2,
                  "shipDate": "2023-05-24T07:11:03.663Z",
                  "status": "placed",
                  "complete": true
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/order/{orderId}": {
      "get": {
        "tags": [
          "stores"
        ],
        "summary": "Find purchase order by ID",
        "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "schema": {
              "maximum": 10,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "example": {
                  "id": 1,
                  "petId": 2,
                  "quantity": 2,
                  "shipDate": "2023-05-24T07:11:03.663Z",
                  "status": "placed",
                  "complete": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "stores"
        ],
        "summary": "Delete purchase order by ID",
        "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            },
            "example": 3
          }
        ],
        "responses": {
          "200": {
            "description": "succesful operation",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "type": "unknown",
                  "message": 1
                }
              }
            }
          }
        }
      }
    },
    "/store/inventory": {
      "get": {
        "tags": [
          "stores"
        ],
        "summary": "Returns pet inventories by status",
        "description": "Returns a map of status codes to quantities",
        "operationId": "getInventory",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "example": {
                  "additionalProp1": 1,
                  "additionalProp2": 2,
                  "additionalProp3": 3
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/user/createWithArray": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Creates list of users with given input array",
        "operationId": "createUsersWithArrayInput",
        "requestBody": {
          "description": "List of user object",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "examples": {
                "200": {
                  "summary": "postive",
                  "value": [
                    {
                      "id": 1,
                      "usrename": "shivasai123",
                      "firstName": "shivasai",
                      "lastName": "mandepally",
                      "email": "shivasai@gmail.com",
                      "password": "shiva1213",
                      "phone": 9542066149,
                      "userStatus": 0
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "applciation/json": {
                "example": {
                  "code": 200,
                  "type": "unknown",
                  "message": "ok"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Creates list of users with given input array",
        "operationId": "createUsersWithListInput",
        "requestBody": {
          "description": "List of user object",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "examples": {
                "200": {
                  "summary": "postive",
                  "value": [
                    {
                      "id": 1,
                      "usrename": "shivasai123",
                      "firstName": "shivasai",
                      "lastName": "mandepally",
                      "email": "shivasai@gmail.com",
                      "password": "shiva1213",
                      "phone": 89277499209
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "applciation/json": {
                "example": {
                  "code": 200,
                  "type": "unknown",
                  "message": "ok"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by user name",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "shivasai123"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": 1,
                  "usrename": "shivasai123",
                  "firstName": "shivasai",
                  "lastName": "mandepally",
                  "email": "shivasai@gmail.com",
                  "password": "shiva1213",
                  "phone": 89277499209
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "shivasai123"
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "200": {
                  "summary": "positive",
                  "value": {
                    "id": 1,
                    "usrename": "shivasai123",
                    "firstName": "shivasai",
                    "lastName": "mandepally",
                    "email": "shivasai@gmail.com",
                    "password": "shiva1213",
                    "phone": 95420881715
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "type": "unknown",
                  "message": 1
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "shivasai123"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "shivasai123"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "shiva1213"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "code": 200,
                  "type": "unknown",
                  "message": "logged in user session:1684921725673"
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "code": 200,
                  "type": "unknown",
                  "message": "ok"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "200": {
                  "summary": "positive",
                  "value": {
                    "id": 1,
                    "username": "shivasai123",
                    "firstName": "shivasai",
                    "lastName": "mandepally",
                    "email": "shivasai@gmail.com",
                    "password": "shiva1213",
                    "phone": 9542066149,
                    "userStatus": 0
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "applciation/json": {
                "example": {
                  "code": 200,
                  "type": "unknown",
                  "message": 1
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Pet"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32"
          }
        },
        "xml": {
          "name": "User"
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "petstore_auth": {	 
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
            "scopes": {
              "read:pets": "read your pets",
              "write:pets": "modify pets in your account"
            }
          }
        }
      }
    }
  }
}